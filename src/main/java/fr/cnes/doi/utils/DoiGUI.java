/*
 * Copyright (C) 2017-2018 Centre National d'Etudes Spatiales (CNES).
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301  USA
 */
package fr.cnes.doi.utils;

import fr.cnes.doi.resource.admin.SuffixProjectsResource;
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.net.URI;
import java.net.URISyntaxException;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.filechooser.FileFilter;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

/**
 * General User Interface for EDU project.
 * @author Jean-Christophe Malapert (jean-christophe.malapert@cnes.fr)
 */
public class DoiGUI extends javax.swing.JDialog {

    /**
     * serialization UID.
     */
    private static final long serialVersionUID = 3081000511267620881L;
    
    /**
     * DOI TEMPLATE for DOI variable.
     */
    private static final String DOI_TPL = "%DOI%";
    
    /**
     * CREATOR TEMPLATE for Creator variable.
     */
    private static final String CREATOR_TPL = "%CREATOR%";
    
    /**
     * TITLE TEMPLATE for Title variable.
     */
    private static final String TITLE_TPL = "%TITLE%";
    
    /**
     * PUBLISHER TEMPLATE for Publisher variable.
     */
    private static final String PUBLISHER_TPL = "%PUBLISHER%";
    
    /**
     * YEAR TEMPLATE for Year publication variable.
     */
    private static final String YEAR_TPL = "%YEAR%";
    
    /**
     * RESOURCE_TYPE TEMPLATE for Resource type variable.
     */
    private static final String RESOURCE_TYPE_TPL = "%RESOURCE_TYPE%";

    /**
     * XML TEMPLATE of the DOI metadata representation.
     */
    private static final String TEMPLATE_XML = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
            + "<resource xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://datacite.org/schema/kernel-4\" xsi:schemaLocation=\"http://datacite.org/schema/kernel-4 http://schema.datacite.org/meta/kernel-4.1/metadata.xsd\">\n"
            + "    <identifier identifierType=\"DOI\">" + DOI_TPL + "</identifier>\n"
            + "    <creators>\n"
            + "        <creator>\n"
            + "            <creatorName>" + CREATOR_TPL + "</creatorName>\n"
            + "        </creator>\n"
            + "    </creators>\n"
            + "    <titles>\n"
            + "        <title>" + TITLE_TPL + "</title>\n"
            + "    </titles>\n"
            + "    <publisher>" + PUBLISHER_TPL + "</publisher>\n"
            + "    <publicationYear>" + YEAR_TPL + "</publicationYear>\n"
            + "    <resourceType resourceTypeGeneral=\"Other\">" + RESOURCE_TYPE_TPL + "</resourceType>\n"
            + "</resource>";    
    
    /**
     * Directory where the DOI Metadata is downloaded.
     */
    private File directoryToSave = null;
    
    /**
     * DOI.
     */
    private String doi;
    
    /**
     * Xml Representation of the DOI metadata
     */
    private String xml;

    /**
     * Logger.
     */
    private static final Logger LOG = LogManager.getLogger(DoiGUI.class.getName());    

    /**
     * Creates new form DoiGUI.
     *
     * @param parent the Frame from which the dialog is displayed
     * @param modal specifies whether dialog blocks user input to other top-level 
     * windows when shown. If true, the modality type property is set to DEFAULT_MODALITY_TYPE, 
     * otherwise the dialog is modeless
     */
    public DoiGUI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.msgLabel.setBackground(Color.GRAY);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        landingPageField = new javax.swing.JTextField();
        creatorField = new javax.swing.JTextField();
        titleField = new javax.swing.JTextField();
        publisherField = new javax.swing.JTextField();
        resourceTypeField = new javax.swing.JTextField();
        resetButton = new javax.swing.JButton();
        submitButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        inistPrefixLabel = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        projectNameLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        msgLabel = new javax.swing.JTextArea();
        saveButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        yearField = new javax.swing.JTextField();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(95, 143, 223));

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        jLabel1.setText("Nice Digital Object Identifier");

        jLabel9.setIcon(new javax.swing.ImageIcon(new javax.swing.ImageIcon(getClass().getResource("/website/images/Cnes-logo.png")).getImage().getScaledInstance(70, 70, Image.SCALE_DEFAULT)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 743, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel2.setText("Landing page:");

        jLabel3.setText("Creator:");

        jLabel4.setText("Title:");

        jLabel5.setText("Publisher:");

        jLabel6.setText("ResourceType:");

        landingPageField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                landingPageFieldActionPerformed(evt);
            }
        });

        creatorField.setText("CNES");
        creatorField.setToolTipText("The full name of the creator");
        creatorField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creatorFieldActionPerformed(evt);
            }
        });

        titleField.setToolTipText("A name or title by which a resource is known");

        publisherField.setText("CNES");
        publisherField.setToolTipText("The name of the entity that holds, archives, publishes prints, distributes, releases, issues, or produces the resource. This property will be used to formulate the citation, so consider the prominence of the role");

        resourceTypeField.setToolTipText("A description of the resource. The format is open, but the preferred format is a single term of some detail");

        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        submitButton.setBackground(new java.awt.Color(56, 107, 200));
        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        jLabel7.setText("INIST prefix for CNES:");

        inistPrefixLabel.setText("10.24400");

        jLabel8.setText("CNES project:");

        projectNameLabel.setText("EDU");

        msgLabel.setColumns(20);
        msgLabel.setLineWrap(true);
        msgLabel.setRows(5);
        jScrollPane1.setViewportView(msgLabel);

        saveButton.setText("Save DOI metadata");
        saveButton.setEnabled(false);
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        jLabel10.setText("Publication year:");

        yearField.setToolTipText("The year when the data was or will be made publicly available. ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inistPrefixLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 338, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(projectNameLabel))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(landingPageField, javax.swing.GroupLayout.DEFAULT_SIZE, 547, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(creatorField, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(titleField)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(publisherField, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(yearField, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(resourceTypeField)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(resetButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(inistPrefixLabel)
                    .addComponent(jLabel8)
                    .addComponent(projectNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(landingPageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(creatorField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(titleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(publisherField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(yearField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(resourceTypeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(resetButton)
                            .addComponent(submitButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveButton))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void landingPageFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_landingPageFieldActionPerformed
    }//GEN-LAST:event_landingPageFieldActionPerformed

    private void creatorFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creatorFieldActionPerformed
    }//GEN-LAST:event_creatorFieldActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        initForm();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        final String landingPage = this.landingPageField.getText();
        final String creator = this.creatorField.getText();
        final String publisher = this.publisherField.getText();
        final String publicationYear = this.yearField.getText();
        final String resourceType = this.resourceTypeField.getText();
        final String title = this.titleField.getText();
        final StringBuilder errorMsg = new StringBuilder();
        if (landingPage.isEmpty()) {
            this.landingPageField.setBackground(Color.red);
            errorMsg.append("Landing page cannot be empty\n");
        }

        try {
            new URI(landingPage);
        } catch (URISyntaxException ex) {
            this.landingPageField.setBackground(Color.red);
            errorMsg.append(ex.getMessage());
        }

        if (!landingPage.contains("cnes")) {
            this.landingPageField.setBackground(Color.red);
            errorMsg.append("The landing page must be in CNES subdomain\n");
        }

        if (creator.isEmpty()) {
            this.creatorField.setBackground(Color.red);
            errorMsg.append("Creator cannot be empty\n");
        }

        if (publisher.isEmpty()) {
            this.publisherField.setBackground(Color.red);
            errorMsg.append("Publisher cannot be empty\n");
        }

        if (resourceType.isEmpty()) {
            this.resourceTypeField.setBackground(Color.red);
            errorMsg.append("ResourceType cannot be empty\n");
        }

        if (title.isEmpty()) {
            this.titleField.setBackground(Color.red);
            errorMsg.append("Title cannot be empty\n");
        }

        if (publicationYear.isEmpty()) {
            this.yearField.setBackground(Color.red);
            errorMsg.append("Publication year cannot be empty\n");
        }

        try {
            Integer.parseInt(publicationYear);
        } catch (NumberFormatException ex) {
            this.yearField.setBackground(Color.red);
            errorMsg.append("The publication year must be under this format YYYY\n");
        }

        if (errorMsg.length() != 0) {
            this.msgLabel.setBackground(Color.red);
            this.msgLabel.setText(errorMsg.toString());
            this.msgLabel.setVisible(true);
        } else {
            this.msgLabel.setVisible(false);
            try {
                final String createdDOI = UniqueDoi.getInstance().createDOI(this.inistPrefixLabel.getText(), this.projectNameLabel.getText(), new URI(landingPage), SuffixProjectsResource.NB_DIGITS);
                initForm();
                this.msgLabel.setText("doi://" + createdDOI + " created for the landing page " + landingPage);
                this.msgLabel.setBackground(Color.GREEN);
                this.msgLabel.setVisible(true);
                this.saveButton.setEnabled(true);
                this.doi = createdDOI;
                this.xml = createXMLFile(landingPage, creator, publisher, createdDOI, title, resourceType, publicationYear);
            } catch (URISyntaxException ex) {
                LOG.fatal(ex);
                this.msgLabel.setText("Unable to create the DOI: " + ex.getMessage());
                this.msgLabel.setBackground(Color.RED);
                this.msgLabel.setVisible(true);
                this.doi = null;
                this.xml = null;
            }
        }

    }//GEN-LAST:event_submitButtonActionPerformed

    /**
     * Creates the XML representation of the DOI metadata.
     * @param landingPage landing page
     * @param creator creator
     * @param publisher publisher
     * @param doi doi
     * @param title title
     * @param resourceType resource type
     * @param publicationYear publication year
     * @return the XML representation of the DOI metadata
     */
    private String createXMLFile(final String landingPage, final String creator,
            final String publisher, final String doi, final String title,
            final String resourceType, final String publicationYear) {
        String xmlDoi = TEMPLATE_XML.replaceFirst(CREATOR_TPL, creator);
        xmlDoi = xmlDoi.replaceFirst(PUBLISHER_TPL, publisher);
        xmlDoi = xmlDoi.replaceFirst(TITLE_TPL, title);
        xmlDoi = xmlDoi.replaceFirst(RESOURCE_TYPE_TPL, resourceType);
        xmlDoi = xmlDoi.replaceFirst(DOI_TPL, doi);
        xmlDoi = xmlDoi.replaceFirst(YEAR_TPL, publicationYear);
        return xmlDoi;
    }

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        if (this.directoryToSave == null) {
            final JFrame parentFrame = new JFrame();
            final JFileChooser chooser = new JFileChooser();
            chooser.setCurrentDirectory(new java.io.File("."));
            chooser.setFileFilter(new FileFilter() {

                @Override
                public boolean accept(File f) {
                    return f.getName().contains(".xml") || f.isDirectory();
                }

                @Override
                public String getDescription() {
                    return "DOI metadata file";
                }
            });
            chooser.setDialogTitle("Directory to save DOI metadata");
            chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            chooser.setAcceptAllFileFilterUsed(false);
            final int userSelection = chooser.showSaveDialog(parentFrame);

            if (userSelection == JFileChooser.APPROVE_OPTION) {
                this.directoryToSave = chooser.getSelectedFile();
                System.out.println("Save in directory: " + this.directoryToSave.getAbsolutePath());
            }
        }

        final String doiFilename = this.doi.replaceAll("/", "_");
        if (this.directoryToSave == null || doiFilename == null || doiFilename.isEmpty()) {
            LOG.debug("No selected file to save");
        } else {
            final File fileToSave = new File(
                    this.directoryToSave.getAbsolutePath() + File.separator + doiFilename + ".xml"
            );
            try (PrintWriter writer = new PrintWriter(fileToSave, "UTF-8")) {
                writer.println(this.xml);
                writer.close();
                this.msgLabel.setBackground(Color.GREEN);
                this.msgLabel.setText("XML file saved in " + fileToSave.getAbsolutePath());
            } catch (FileNotFoundException | UnsupportedEncodingException ex) {
                LOG.fatal(ex);
                this.msgLabel.setBackground(Color.red);
                this.msgLabel.setText(ex.getMessage());
            }
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    /**
     * Starts the GUI
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DoiGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                final DoiGUI dialog = new DoiGUI(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    /**
     * Reset the form values.
     */
    private void initForm() {
        this.yearField.setText("");
        this.yearField.setBackground(Color.WHITE);
        this.landingPageField.setText("");
        this.landingPageField.setBackground(Color.WHITE);
        this.resourceTypeField.setText("");
        this.resourceTypeField.setBackground(Color.WHITE);
        this.titleField.setText("");
        this.titleField.setBackground(Color.WHITE);
        this.msgLabel.setText("");
        this.msgLabel.setBackground(Color.GRAY);
        this.saveButton.setEnabled(false);
        this.doi = null;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField creatorField;
    private javax.swing.JLabel inistPrefixLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField landingPageField;
    private javax.swing.JTextArea msgLabel;
    private javax.swing.JLabel projectNameLabel;
    private javax.swing.JTextField publisherField;
    private javax.swing.JButton resetButton;
    private javax.swing.JTextField resourceTypeField;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton submitButton;
    private javax.swing.JTextField titleField;
    private javax.swing.JTextField yearField;
    // End of variables declaration//GEN-END:variables
}
